getgenv().HopDelay = 20 -- Default Value = 20
getgenv().Boost = true -- Default Value = true
getgenv().BoostStuds = 0.2 -- Default Value = 0.2
getgenv().HopBoost = true -- Default Value = true
getgenv().HopBoostStuds = 1.5 -- Default Value = 1.5

-- Main

if not getgenv().BedwarsHopToggled then
    getgenv().BedwarsHopToggled = true
else
    return
end
local UIS = game:GetService("UserInputService")
local Toggled = false

UIS.InputBegan:Connect(function(Key, Event)
    if Event then return end
    if Key.UserInputType == Enum.UserInputType.Keyboard then
        if Key.KeyCode == Enum.KeyCode.Z then
            Toggled = not Toggled
            local CHead = game.Players.LocalPlayer.Character.Head.Position
            local CY = game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Y
            local i = 0
            local UpDebounce = 0
            local DownDebounce = 0
            
            if Toggled then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(Vector3.new(0, 1, 0))
            end
            while Toggled do
                game.Players.LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping, false)
                i = i + 1
                
                local AntiFall = Instance.new("Part", game.Workspace)
                local Mark = Instance.new("Part", game.Workspace)
                AntiFall.Name = "CollidePart"
                Mark.Name = "Mark"
                AntiFall.Anchored = true
                Mark.Anchored = true
                AntiFall.Size = Vector3.new(3, 1, 3)
                Mark.Size = Vector3.new(3, 0.01, 3)
                AntiFall.Position = Vector3.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position.X, CY - 3.499, game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Z)
                Mark.Position = Vector3.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position.X, CHead.Y, game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Z) + Vector3.new(0, 1, 0)
                AntiFall.Material = Enum.Material.Neon
                Mark.Material = Enum.Material.Neon
                AntiFall.BrickColor = BrickColor.new("Really blue")
                if Mark.Position.Y > game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Y then
                    Mark.BrickColor = BrickColor.new("Lime green")
                else
                    Mark.BrickColor = BrickColor.new("Really red")
                end
                Mark.CanCollide = false
                
                if i <= getgenv().HopDelay / 2 and getgenv().Boost then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(Vector3.new(0, 0, -getgenv().BoostStuds))
                end
                
                if i >= getgenv().HopDelay then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(Vector3.new(0, 1, 0))
                    if getgenv().HopBoost then
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(Vector3.new(0, 0, -getgenv().HopBoostStuds))
                    end
                    i = 0
                end
                if UIS:IsKeyDown(Enum.KeyCode.Space) then
                    UpDebounce = UpDebounce + 1
                    i = getgenv().HopDelay - 5
                    if UpDebounce >= 5 then
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(Vector3.new(0, 3, 0))
                        CY = CY + 3
                        UpDebounce = 0
                    else
                        CY = CY - 0.1
                    end
                end
                if UIS:IsKeyDown(Enum.KeyCode.LeftShift) then
                    if CY >= game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Y - 5 then
                        DownDebounce = DownDebounce + 1
                        i = getgenv().HopDelay - 5
                        if DownDebounce >= 5 then
                            --game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(Vector3.new(0, -3, 0))
                            CY = CY - 3
                            DownDebounce = 0
                        else
                            CY = CY + 0.1
                        end
                    end
                end
                
                wait()
                AntiFall:Destroy()
                Mark:Destroy()
            end
            game.Players.LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping, true)
        end
    end
end)

--[[ UIS.InputEnded:Connect(function(Key, Event)
    if Event then return end
    if Key.UserInputType == Enum.UserInputType.Keyboard then
        if Key.KeyCode == Enum.KeyCode.G then
            Toggled = false
        end
    end
end) ]]
